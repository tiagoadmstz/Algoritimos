/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algoritimos.frames;

import algoritimos.controle.ControleUsuario;
import algoritimos.dao.EntityManagerHelper;
import algoritimos.entidades.Usuario;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JPanel;

/**
 *
 * @author tiago.teixeira
 */
public class CadUsuario extends javax.swing.JFrame {

    //private final PainelUsuarioDefaultListener listener;

    /**
     * Creates new form CadUsuario
     */
    public CadUsuario() {
        initComponents();
        //listener = new PainelUsuarioDefaultListener(this, EntityManagerHelper.DERBYDB_PU);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar = new javax.swing.JMenuBar();
        menuArquivo = new javax.swing.JMenu();
        itemFechar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Usu√°rios de Sistema");

        menuBar.setPreferredSize(new java.awt.Dimension(0, 0));

        itemFechar.setText("Fechar");
        itemFechar.setActionCommand("fechar");
        menuArquivo.add(itemFechar);

        menuBar.add(menuArquivo);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itemFechar;
    private javax.swing.JMenu menuArquivo;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

    private final class PainelUsuarioDefaultListener {

        //private final CadUsuario form;
        private final List<JPanel> paineis = new ArrayList();
        private final List<JComponent> buttons = new ArrayList();
        private final EntityManagerHelper emh = new EntityManagerHelper();
        private final Usuario usuario = new Usuario();
        private String persistence_unit;

        /*public PainelUsuarioDefaultListener(CadUsuario form, String persistence_unit) {
        this.form = form;
        this.persistence_unit = persistence_unit;
        attachListener();
        carregarPaineis();
        ControleUsuario.verificaForcaSenha(painelUsuarioDefault.getTxtSenha(), painelUsuarioDefault.getLbForca(), painelUsuarioDefault.getPbForcaSenha());
        ControleUsuario.verificaSenhasCoinscidentes(painelUsuarioDefault.getTxtSenha(), painelUsuarioDefault.getTxtConfirmarSenha(), painelUsuarioDefault.getLbConfirmarSenha());
        }
        
        @Override
        public void attachListener() {
        itemFechar.addActionListener(this);
        painelUsuarioDefault.getBtNovo().addActionListener(this);
        painelUsuarioDefault.getBtCancelar().addActionListener(this);
        painelUsuarioDefault.getBtEditar().addActionListener(this);
        painelUsuarioDefault.getBtFechar().addActionListener(this);
        painelUsuarioDefault.getBtSalvar().addActionListener(this);
        fecharESC(itemFechar);
        }
        
        @Override
        public void actionPerformed(ActionEvent e) {
        switch (e.getActionCommand()) {
        case "novo":
        novo(null, paineis, buttons);
        painelUsuarioDefault.getTxtNome().requestFocus();
        break;
        case "cancelar":
        cancelar(paineis, buttons);
        break;
        case "editar":
        editar(paineis, buttons);
        break;
        case "fechar":
        fechar();
        break;
        case "salvar":
        salvar(0, emh, persistence_unit, form, paineis, buttons, usuario);
        break;
        case "alterar":
        salvar(1, emh, persistence_unit, form, paineis, buttons, usuario);
        alterar(paineis, buttons);
        break;
        }
        }
        
        @Override
        public void carregarPaineis() {
        paineis.add(painelUsuarioDefault.getPainelDados());
        buttons.add(painelUsuarioDefault.getBtCancelar());
        buttons.add(painelUsuarioDefault.getBtEditar());
        buttons.add(painelUsuarioDefault.getBtFechar());
        buttons.add(painelUsuarioDefault.getBtNovo());
        buttons.add(painelUsuarioDefault.getBtSalvar());
        }
        
        @Override
        public void setDados(Object object) {
        usuario.clonar((Usuario) object);
        }
        
        }*/
    }
}
